# https://github.com/ikedaosushi/serverless-batch-example
# https://github.com/dejonghe/aws-batch-example

service: batch-poc

custom:
  region: ${opt:region, "eu-central-1"}
  stage: ${opt:stage, "dev"}
  batch:
    compute_env: ${self:service}-compute-env-${self:custom.stage}
    job_queue: ${self:service}-job-queue-${self:custom.stage}
    job_definition_start: ${self:service}-job-definition-start-${self:custom.stage}
    job_definition_process: ${self:service}-job-definition-process-${self:custom.stage}
    ecr_repo_process: 775255162681.dkr.ecr.eu-central-1.amazonaws.com/poc-batch-process:latest
    ecr_repo_start: 775255162681.dkr.ecr.eu-central-1.amazonaws.com/poc-batch-start:latest
  subnet_ids: subnet-040238def09979844,subnet-04862556280ff8c43,subnet-049eb3dd944e6b359
  security_groups: sg-0cb1e1963cf2a5c97
  auxBucket: poc-batch-gbandeira

provider:
  name: aws
  runtime: python3.8
  region: ${self:custom.region}
  stage: ${self:custom.stage}
  memorySize: 128
  environment:
    JOB_QUEUE: ${self:custom.batch.job_queue}
    JOB_DEFINITION_START: ${self:custom.batch.job_definition_start}
    TEST_SECRET: !Ref SecretsExample


package:
  individually: true
  exclude:
    - README.md
    - venv/
    - node_modules

functions:
  trigger: # Function in charge of triggering the start Batch Job
    handler: handler.lambda_handler
    memorySize: 128
    events:
      - http:
          method: get
          path: batch
    role: !GetAtt [ LambdaTriggerIAMRole, Arn ]

resources:
  - ${file(infra/serverless-param.yml)}
  - ${file(infra/secrets/serverless-secrets.yml)}
  - ${file(infra/serverless-lambda.yml)}
  - ${file(infra/serverless-batch.yml)}





